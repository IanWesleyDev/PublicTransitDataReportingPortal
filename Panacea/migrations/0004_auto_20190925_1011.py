# Generated by Django 2.2b1 on 2019-09-25 17:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('Panacea', '0003_auto_20190917_1227'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransitMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='TransitMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(max_length=120)),
                ('rollup_mode', models.CharField(max_length=120)),
            ],
        ),
        migrations.AddField(
            model_name='cover_sheet',
            name='monorail_ownership',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='cover_sheet',
            name='organization_logo',
            field=models.BinaryField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='community_medicaid_days_of_service',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='community_medicaid_revenue_service_vehicles',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='community_medicaid_service_and_eligibility',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='current_operations',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='fares_desc',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='governing_body',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cover_sheet',
            name='intermodal_connections',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='SummaryTransitData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('administration_of_mode', models.CharField(choices=[('Direct Operated', 'Direct Operated'), ('Purchased', 'Purchased')], max_length=80)),
                ('metric_value', models.FloatField()),
                ('comments', models.TextField(null=True)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.TransitMetric')),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.TransitMode')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.organization')),
                ('report_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('rollup_mode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.TransitMode')),
            ],
        ),
        migrations.CreateModel(
            name='SummaryRevenues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('government_type', models.CharField(choices=[('Federal', 'Federal'), ('State', 'State'), ('Local', 'Local')], max_length=100)),
                ('spending_type', models.CharField(choices=[('Capital', 'Capital'), ('Operating', 'Operating')], max_length=30)),
                ('specific_revenue_source', models.CharField(choices=[('Sales Tax', 'Sales Tax'), ('Other Local Taxes', 'Other Local Taxes'), ('MVET', 'MVET'), ('Federal Section §5307 Operating', 'Federal Section §5307 Operating'), ('Federal Section §5307 Preventative', 'Federal Section §5307 Preventative'), ('Federal Section §5311 Operating', 'Federal Section §5311 Operating'), ('FTA JARC (§5316) Program', 'FTA JARC (§5316) Program'), ('Other Federal Operating', 'Other Federal Operating'), ('State Rural Mobility Operating Grants', 'State Rural Mobility Operating Grants'), ('State Regional Mobility Operating Grants', 'State Regional Mobility Operating Grants'), ('State Special Needs Operating Grants', 'State Special Needs Operating Grants'), ('State Operating Distribution', 'State Operating Distribution'), ('Sales Tax Equalization', 'Sales Tax Equalization'), ('Other State Operating Grants', 'Other State Operating Grants'), ('Other-Advertising', 'Other-Advertising'), ('Other-Interest', 'Other-Interest'), ('Other-Gain (Loss) on Sale of Assets', 'Other-Gain (Loss) on Sale of Assets'), ('Other-MISC ', 'Other-MISC '), ('Federal Section §5307 Capital Grants', 'Federal Section §5307 Capital Grants'), ('Federal Section §5309 Capital Grants', 'Federal Section §5309 Capital Grants'), ('Federal Section §5310 Capital Grants', 'Federal Section §5310 Capital Grants'), ('Federal Section §5311 Capital Grants', 'Federal Section §5311 Capital Grants'), ('FTA JARC (§5316) Program', 'FTA JARC (§5316) Program'), ('Federal STP Grants', 'Federal STP Grants'), ('CM/AQ and Other Federal Grants', 'CM/AQ and Other Federal Grants'), ('State Rural Mobility Grants', 'State Rural Mobility Grants'), ('State Regional Mobility Grants', 'State Regional Mobility Grants'), ('State Special Needs Grants', 'State Special Needs Grants'), ('Sales Tax Equalization-Capital', 'Sales Tax Equalization-Capital'), ('State Vanpool Grants', 'State Vanpool Grants'), ('Other State Capital Funds', 'Other State Capital Funds')], max_length=120)),
                ('specific_revenue_value', models.IntegerField()),
                ('subfund', models.BooleanField(default=False)),
                ('subfund_specification', models.TextField(null=True)),
                ('comments', models.TextField(null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.organization')),
            ],
        ),
        migrations.CreateModel(
            name='SummaryExpenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('specific_expense_source', models.CharField(choices=[('Local Funds', 'Local Funds'), ('Other-Expenditures', 'Other-Expenditures'), ('Depreciation ', 'Depreciation '), ('Interest', 'Interest'), ('Principal', 'Principal'), ('General Fund', 'General Fund'), ('Unrestricted Cash and Investments', 'Unrestricted Cash and Investments'), ('Operating Reserve', 'Operating Reserve'), ('Working Capital', 'Working Capital'), ('Capital Reserve Funds', 'Capital Reserve Funds'), ('Contingency Reserve', 'Contingency Reserve'), ('Debt Service Funds', 'Debt Service Funds'), ('Insurance Funds', 'Insurance Funds'), ('Other', 'Other')], max_length=100)),
                ('specific_expense_value', models.IntegerField()),
                ('subfund', models.BooleanField(default=False)),
                ('subfund_specification', models.TextField(null=True)),
                ('comments', models.TextField(null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='Panacea.organization')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSummaryTransitData',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('administration_of_mode', models.CharField(choices=[('Direct Operated', 'Direct Operated'), ('Purchased', 'Purchased')], max_length=80)),
                ('metric_value', models.FloatField()),
                ('comments', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('metric', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.TransitMetric')),
                ('mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.TransitMode')),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.organization')),
                ('report_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rollup_mode', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.TransitMode')),
            ],
            options={
                'verbose_name': 'historical summary transit data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSummaryRevenues',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('government_type', models.CharField(choices=[('Federal', 'Federal'), ('State', 'State'), ('Local', 'Local')], max_length=100)),
                ('spending_type', models.CharField(choices=[('Capital', 'Capital'), ('Operating', 'Operating')], max_length=30)),
                ('specific_revenue_source', models.CharField(choices=[('Sales Tax', 'Sales Tax'), ('Other Local Taxes', 'Other Local Taxes'), ('MVET', 'MVET'), ('Federal Section §5307 Operating', 'Federal Section §5307 Operating'), ('Federal Section §5307 Preventative', 'Federal Section §5307 Preventative'), ('Federal Section §5311 Operating', 'Federal Section §5311 Operating'), ('FTA JARC (§5316) Program', 'FTA JARC (§5316) Program'), ('Other Federal Operating', 'Other Federal Operating'), ('State Rural Mobility Operating Grants', 'State Rural Mobility Operating Grants'), ('State Regional Mobility Operating Grants', 'State Regional Mobility Operating Grants'), ('State Special Needs Operating Grants', 'State Special Needs Operating Grants'), ('State Operating Distribution', 'State Operating Distribution'), ('Sales Tax Equalization', 'Sales Tax Equalization'), ('Other State Operating Grants', 'Other State Operating Grants'), ('Other-Advertising', 'Other-Advertising'), ('Other-Interest', 'Other-Interest'), ('Other-Gain (Loss) on Sale of Assets', 'Other-Gain (Loss) on Sale of Assets'), ('Other-MISC ', 'Other-MISC '), ('Federal Section §5307 Capital Grants', 'Federal Section §5307 Capital Grants'), ('Federal Section §5309 Capital Grants', 'Federal Section §5309 Capital Grants'), ('Federal Section §5310 Capital Grants', 'Federal Section §5310 Capital Grants'), ('Federal Section §5311 Capital Grants', 'Federal Section §5311 Capital Grants'), ('FTA JARC (§5316) Program', 'FTA JARC (§5316) Program'), ('Federal STP Grants', 'Federal STP Grants'), ('CM/AQ and Other Federal Grants', 'CM/AQ and Other Federal Grants'), ('State Rural Mobility Grants', 'State Rural Mobility Grants'), ('State Regional Mobility Grants', 'State Regional Mobility Grants'), ('State Special Needs Grants', 'State Special Needs Grants'), ('Sales Tax Equalization-Capital', 'Sales Tax Equalization-Capital'), ('State Vanpool Grants', 'State Vanpool Grants'), ('Other State Capital Funds', 'Other State Capital Funds')], max_length=120)),
                ('specific_revenue_value', models.IntegerField()),
                ('subfund', models.BooleanField(default=False)),
                ('subfund_specification', models.TextField(null=True)),
                ('comments', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.organization')),
            ],
            options={
                'verbose_name': 'historical summary revenues',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSummaryExpenses',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('report_year', models.IntegerField()),
                ('specific_expense_source', models.CharField(choices=[('Local Funds', 'Local Funds'), ('Other-Expenditures', 'Other-Expenditures'), ('Depreciation ', 'Depreciation '), ('Interest', 'Interest'), ('Principal', 'Principal'), ('General Fund', 'General Fund'), ('Unrestricted Cash and Investments', 'Unrestricted Cash and Investments'), ('Operating Reserve', 'Operating Reserve'), ('Working Capital', 'Working Capital'), ('Capital Reserve Funds', 'Capital Reserve Funds'), ('Contingency Reserve', 'Contingency Reserve'), ('Debt Service Funds', 'Debt Service Funds'), ('Insurance Funds', 'Insurance Funds'), ('Other', 'Other')], max_length=100)),
                ('specific_expense_value', models.IntegerField()),
                ('subfund', models.BooleanField(default=False)),
                ('subfund_specification', models.TextField(null=True)),
                ('comments', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Panacea.organization')),
            ],
            options={
                'verbose_name': 'historical summary expenses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
